{
  "openapi": "3.0.3",
  "info": {
    "title": "Swagger Petstore - OpenAPI 3.0",
    "description": "This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about\nSwagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!\nYou can now help us improve the API whether it's by making changes to the definition itself or to the code.\nThat way, with time, we can improve the API in general, and expose some of the new features in OAS3.\n\n_If you're looking for the Swagger 2.0/OAS 2.0 version of Petstore, then click [here](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Petstore OAS 2.0` menu option!_\n\nSome useful links:\n- [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\n- [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)",
    "termsOfService": "http://swagger.io/terms/",
    "version": "1.0.11",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "http://localhost:3000/API"
    }
  ],
  "tags": [
    {
      "name": "CRUD API and Middleware",
      "description": "CRUD API, in case movies and users and users authentication, authorization",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "movies",
      "description": "Access to available movies",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "user",
      "description": "Access to user list"
    }
  ],
  "paths": {
    "/movies": {
      "get": {
        "tags": [
          "movies"
        ],
        "summary": "Returns movies",
        "description": "Return movies",
        "operationId": "get All Movies",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Movies"
                }
              }
            }
          },
          "400": {
            "description": "All Movies can not be found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/movies/id/{id}": {
      "get": {
        "tags": [
          "movies"
        ],
        "summary": "Return movies By Id",
        "description": "Return movies By Id",
        "operationId": "placeOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID movies",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Movies/items"
                }
              }
            }
          },
          "400": {
            "description": "Movie is not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/movies/genres/{genres}": {
      "get": {
        "tags": [
          "movies"
        ],
        "summary": "Return movie By Genres",
        "description": "Return movie By Genres",
        "operationId": "getOrderById",
        "parameters": [
          {
            "name": "genres",
            "in": "path",
            "description": "ID of order that needs to be fetched",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Movies/items"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    },
    "/movies/add": {
      "post": {
        "tags": [
          "movies"
        ],
        "summary": "Add movie",
        "description": "Add movie",
        "operationId": "postMovies",
        "requestBody": {
          "description": "Created movies object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddMovies"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "movie is successfully added"
          },
          "400": {
            "description": "Invalid Input"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/movies/update/{id}": {
      "put": {
        "tags": [
          "movies"
        ],
        "summary": "Update movie",
        "description": "Update Movie",
        "operationId": "updateMovies",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of order that needs to be fetched",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Update movies object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddMovies"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "movie is successfully updated"
          },
          "400": {
            "description": "Invalid Input"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/movies/delete/{id}": {
      "delete": {
        "tags": [
          "movies"
        ],
        "summary": "Update movie",
        "description": "Update Movie",
        "operationId": "deleteMovies",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of order that needs to be fetched",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "movie is successfully updated"
          },
          "400": {
            "description": "Invalid Input"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "This can only be done by the logged in user.",
        "operationId": "Register user",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUser"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUser"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Register Success"
          },
          "400": {
            "description": "Invalid Input"
          },
          "404": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Login user into the system",
        "description": "",
        "operationId": "loginUser",
        "requestBody": {
          "description": "Login User",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUser"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/LoginUser"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/LoginUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login Success"
          },
          "400": {
            "description": "Invalid Input"
          },
          "404": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Movies": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "example": "Naruto Shippuden"
            },
            "genres": {
              "type": "string",
              "example": "Anime"
            },
            "year": {
              "type": "integer",
              "example": 2016
            }
          }
        }
      },
      "AddMovies": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Naruto Shippuden"
          },
          "genres": {
            "type": "string",
            "example": "Anime"
          },
          "year": {
            "type": "integer",
            "example": 2016
          }
        }
      },
      "RegisterUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "gender": {
            "type": "string",
            "example": "Male"
          },
          "password": {
            "type": "string",
            "example": "12345"
          },
          "role": {
            "type": "string",
            "example": "Electrician"
          }
        }
      },
      "LoginUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "gender": {
            "type": "string",
            "example": "Male"
          },
          "password": {
            "type": "string",
            "example": "12345"
          },
          "role": {
            "type": "string",
            "example": "Electrician"
          }
        }
      }
    }
  }
}